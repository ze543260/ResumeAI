const pdfGeneratorService = require("./src/services/pdfGeneratorService");

async function testFullPdfWithAI() {
  try {
    console.log("üß™ Testing complete PDF generation with AI...");

    const mockAnalysisData = {
      overallScore: 65,
      areasForImprovement:
        "Melhorar formata√ß√£o, adicionar m√©tricas quantitativas e destacar conquistas espec√≠ficas",
    };

    const mockResumeText = `
Jos√© Eduardo Videira Silva
Email: jose.silva@email.com
Telefone: (11) 99999-9999
Localiza√ß√£o: S√£o Paulo, SP

OBJETIVO PROFISSIONAL:
Desenvolvedor de software com experi√™ncia em Python, JavaScript e tecnologias web, buscando oportunidades para contribuir com solu√ß√µes inovadoras.

EXPERI√äNCIA PROFISSIONAL:
Desenvolvedor de Sistemas - Empresa ABC (2021-2024)
- Desenvolvimento de aplica√ß√µes web usando Python e Django
- Cria√ß√£o de APIs REST para sistemas internos
- Manuten√ß√£o e otimiza√ß√£o de bancos de dados PostgreSQL
- Participa√ß√£o em projetos de migra√ß√£o para cloud AWS

Estagi√°rio de TI - Empresa XYZ (2020-2021)
- Suporte t√©cnico aos usu√°rios
- Desenvolvimento de scripts Python para automa√ß√£o
- Aux√≠lio na manuten√ß√£o de sistemas legados

FORMA√á√ÉO ACAD√äMICA:
Bacharelado em Ci√™ncia da Computa√ß√£o - Universidade ABC (2018-2022)
- Conclus√£o em 2022 com m√©dia 8.5

HABILIDADES T√âCNICAS:
- Linguagens: Python, JavaScript, Java, C
- Frameworks: Django, React, Node.js, Angular
- Banco de Dados: PostgreSQL, MongoDB, MySQL
- Cloud: AWS, Docker
- Ferramentas: Git, Jenkins, Linux

PROJETOS PESSOAIS:
- Sistema de gest√£o de biblioteca usando Django
- Aplicativo mobile React Native para controle de gastos
- API de an√°lise de sentimentos com Python e TensorFlow
    `;

    console.log("üìä Mock analysis data:", mockAnalysisData);
    console.log("üìÑ Resume text length:", mockResumeText.length);
    console.log("\nü§ñ Generating improved PDF with AI...");

    const result = await pdfGeneratorService.generateImprovedResumePdf(
      mockAnalysisData,
      mockResumeText
    );

    console.log("\n‚úÖ SUCCESS! PDF generated with AI!");
    console.log("üìÅ File name:", result.filename);
    console.log("üìä PDF size:", result.pdfBuffer.length, "bytes");
    console.log(
      "üíæ PDF size:",
      (result.pdfBuffer.length / 1024).toFixed(2),
      "KB"
    );

    // Save the PDF to check the content
    const fs = require("fs");
    fs.writeFileSync(`test-${result.filename}`, result.pdfBuffer);
    console.log(`üíæ PDF saved as: test-${result.filename}`);
  } catch (error) {
    console.error("‚ùå Test failed:", error.message);
    console.error("üîç Stack:", error.stack);
  }
}

testFullPdfWithAI();
